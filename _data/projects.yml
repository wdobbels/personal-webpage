- title: Machine failure prediction
  subtitle: Internship
  text: |
    This was an internship I did at the data analytics department of Deloitte Belgium. Given a time series that spans across a few years, 
    the first step was to identify a number of machine failures. The goal was then to look at the hours before the failure, and see if there are any characteristic features. 
    Results. I tested a series of feature extraction algorithms (including wavelets). These were then fed into a machine learning classifier,
    which predicted if the machine would fail in the next hour or not. <br/><br/>
    <b>Skills:</b> R, machine learning, wavelets
  sideimage: /assets/img/projects/failure-prediction.jpg
  sideimage-alt: RPM as a function of time. Red is a timestamp where we predict a failure. Failure 15 is predicted in advance, failure 14 is not.
  extraclasses: lighter-bg

- title: Creating a chess engine
  subtitle: Course artificial intelligence
  text: |
    In 1996, IBM's chess engine managed to defeat chess grandmaster Garry Kasparov. Since then, computing power has only increased, and numerous new algorithms
    have been developed to improve these chess engines. For the project of an AI course, me and a classmate decided to build a simple chess AI. 
    It involves a minimax with numerous optimizations, an optimizable static board evaluation, and is controllable via a GUI. 
    The AI sometimes managed to beat us, although we are certainly no grandmasters. <br/><br/>
    <b>Skills:</b> C++, temporal difference learning, universal chess interface, minimax, board evaluation
  sideimage: /assets/img/projects/chess.jpg
  sideimage-alt: "A game of chess"

- title: A mobile radiation detector
  subtitle: Bachelor's project
  text: |
    Sending humans to places of high radiation is dangerous. For our bachelor project, me and 
    <a href="https://www.linkedin.com/in/jonasvandepitte/" target="_blank" rel="noopener">Jonas</a> worked on a small raspberry pi controlled vehicle, that measured the 
    radiation field. Most of the hardware was already in place, so the main focus was on the software. 
    First, we set up a UDP connection with a host. The host could then make a continuously updating plot of the radiation field, 
    and sends the input of an xbox controller to the robot. The raspberry pi on the robot sends these controls to various arduino's.
    We also measured how the robot's hardware influences the radiation measured by the Geiger counter. <br/><br/>
    <b>Skills:</b> python, raspberry pi, ssh, git, UDP/TCP
  sideimage: /assets/img/projects/stralingsdetector.jpg
  sideimage-alt: ""
  extraclasses: lighter-bg

- title: Buzzball
  subtitle: Hobby project
  text: |
    You control a plasma ball with your mouse. Missiles are locked onto you, but these can be destroyed by shooting them (ctrl key to anchor). 
    Unlock more abilities as the game progresses! <br/><br/>
    <b>Skills:</b> Unity game engine, vector art, C# programming <br/><br/>
    <a href="https://harry-muana.itch.io/buzzball" target="_blank" rel="noopener" class="button mr-small">Play!</a> 
  sideimage: /assets/img/projects/buzzball.jpg
  sideimage-alt: ""

- title: ...and more!
  text: |
    From a cave copter game where the walls are generated by a music file, to a d3 based graph representation, a youtube video recommender, and more. I like to spend time on programming projects!
  sideimage: /assets/img/projects/projects.jpg
  sideimage-alt: ""
  extraclasses: lighter-bg